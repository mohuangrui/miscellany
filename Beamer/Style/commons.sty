%%%%% --------------------------------------------------------------------------------
%%
%%%%***************************** Version Information ********************************
%%
%% this is the "commons.sty" package used for configure document styles
%% Copyright (C) Huangrui Mo <huangrui.mo@gmail.com>
%% This is free software: you can redistribute it and/or modify it
%% under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.
%%
\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{commons}
[2014/10/01 v0.1 commons 
macros package]
%%%%% --------------------------------------------------------------------------------
%%
%%%%******************************* Declare Options **********************************
%%
%% end-user parameters, each option is declared by one declare option command
\newif\ifCOMMONS@CJK \COMMONS@CJKfalse
\DeclareOption{CJK}{% Chinese environment support
    \COMMONS@CJKtrue%
}
\newif\ifCOMMONS@tikz \COMMONS@tikzfalse
\DeclareOption{tikz}{% enable tikz package for complex diagrams
    \COMMONS@tikztrue%
}
\newif\ifCOMMONS@table \COMMONS@tablefalse
\DeclareOption{table}{% enable a table package for complex tables
    \COMMONS@tabletrue%
}
\newif\ifCOMMONS@list \COMMONS@listfalse
\DeclareOption{list}{% enable enhanced list structures
    \COMMONS@listtrue%
}
\newif\ifCOMMONS@handout \COMMONS@handoutfalse
\DeclareOption{handout}{% enable handout output
    \COMMONS@handouttrue%
}
\DeclareOption*{% handle non-implemented options
    \PackageWarning{commons}{Unknown option '\CurrentOption'}%
}
%% terminates all options processing
\ProcessOptions\relax
%%%%% --------------------------------------------------------------------------------
%%
%%%%******************************* Required Packages ********************************
%%
%% Language Setting
\RequirePackage{ifpdf,ifxetex}
%% packages and settings depend on PDF mode
\ifxetex % running xelatex in PDF mode
%%%%% --------------------------------------------------------------------------------
%%
%%%%********************************** Xelatex ***************************************
%%
%%% >>> System Font Environment
%%
%% If compile by "xelatex", then it support system fonts.
\ifCOMMONS@CJK
    %% for Chinese document, xelatex is superior to pdflatex, make sure using utf-8 format!
    \RequirePackage{xeCJK}% Chinese environment support
    %% -- Set Chinese fonts.
    %\setCJKmainfont[BoldFont=Adobe Heiti Std,ItalicFont=Adobe Kaiti Std]{Adobe Song Std}% \rmfamily
    %\setCJKsansfont{Adobe Heiti Std}% \sffamily
    %\setCJKmonofont{Adobe Fangsong Std}% \ttfamily
\fi
%% Fonts and tweaks for xelatex:
\RequirePackage{fontspec}% fontspec package.
\defaultfontfeatures{Ligatures=TeX}% use tex style to support LaTeX quoting style.
%% -- Set English fonts.
%% Roman, or Serif - typefaces are named for the features at the ends of their strokes
%% determine \rmfamily, usually for main contents
%% because of \renewcommand*{\familydefault}{\rmdefault}, it's also determine \normalfont.
%% examples: Times New Roman, Garamond, Adobe Garamond Pro
\setmainfont[BoldFont=Garamond-Bold,ItalicFont=Garamond-Italic]{Garamond}%
%% Sans serif - typefaces without strokes (without serif) to get high readability
%% determine \sffamily, usually for signage, headings that demanding high readability
%% examples: Helvetica, Gill Sans, Futura
\setsansfont{Gill Sans MT}%
%% Monospaced - typefaces that every glyph is the same width (opposed to variable-width fonts).
%% determine \ttfamily, usually for programming, tabulated data, etc.
%% examples: Rockwell, Andale Mono, Courier, Monaco
\setmonofont{Rockwell}%
\else
\ifpdf % running pdfTeX in PDF mode
%%%%% --------------------------------------------------------------------------------
%%
%%%%******************************** Pdflatex ****************************************
%%
%%% >>>  Input encoding and the font encoding
%%
%% Specify language.
%% Set Language you want to use: \RequirePackage[language]{babel}
%% You should place it soon after the \documentclass command, so that all the other
%% packages you load afterwards will know the language you are using.
%\RequirePackage[english]{babel}% language.
%% Specify input encoding.
\RequirePackage[utf8]{inputenc}% make sure your document is saved using the UTF-8 encoding.
%\RequirePackage[latin1]{inputenc}% latin encoding
%% Font encoding.
\RequirePackage[T1]{fontenc}
%% Font package.
\RequirePackage{palatino}%
%% Options:
%% Text + Math: Adobe Times Roman
%% - \RequirePackage{newtxtext,newtxmath}
%% Text + Math: Palatino
%% - \RequirePackage{palatino}
%% Text + Math: Adobe Times Roman
%% - \RequirePackage{mathptmx,newtxmath}
%% Chinese environment for pdflatex
\ifCOMMONS@CJK
    \RequirePackage{CJKutf8}
    \AtBeginDocument{\begin{CJK*}{UTF8}{hei}\CJKtilde}
    \AtEndDocument{\clearpage\end{CJK*}}
\fi
\fi
\fi
%%
%%% >>> Error handling
%%
\RequirePackage{etex}% to handle errors from tikz, caption, ctables with beamer
%%
%% >>> List Structures
%%
\ifCOMMONS@list% enable enhanced list and verbatim structures
    %\RequirePackage{enumitem}% configure the enumerate environment
    \RequirePackage{listings}% useful for Algorithm and Coding
    %% Improves the verbatim environment, fixing some bugs. Moreover
    %% it provides the comment environment, that lets you add multiple-line
    %% comments or easily comment out big parts of the code.
    \RequirePackage{verbatim}
\fi
%%
%% >>> Math packages
%%
\RequirePackage{mathtools,amstext,amsfonts,amssymb}
%%
%%% >>> Citations and References
%%
\RequirePackage[backend=biber,style=authoryear,firstinits=true,maxcitenames=99]{biblatex}
\addbibresource{ref.bib}
%%
%% >>> Tkiz
%%
%% Draw graphics directly with TeX commands
%% LaTeX/PGF/TikZ to draw procedural graphics directly with TeX commands.
%% Using TikZ in a LaTeX document requires loading the tikz package:
\ifCOMMONS@tikz% enable tikz for complex diagrams
    \RequirePackage{tikz}%
    \RequirePackage{smartdiagram}% easily draw diagrams from a list of items
    %% This will automatically load the pgf package. To load further libraries use:
    \usetikzlibrary{
    positioning,
    arrows,
    backgrounds,
    fit,
    calc,
    fadings,
    shadows,
    mindmap,
    calendar,
    decorations.pathreplacing,
    decorations.pathmorphing,
    decorations.markings,
    shapes,
    trees
    }%
\fi
%% Examples for libraries are "arrows", "automata", "backgrounds", "calendar",
%% "chains", "matrix", "mindmap", "patterns", "petri", "shadows", "shapes.geometric",
%% "shapes.misc", "spy", "trees".
%%
%%% >>> Tables
%%
\ifCOMMONS@table% enable a table for complex tables
    %% colortbl - add colour to latex tables for cols, rows, cells.
    %% dcolumn - align on the decimal point of numbers in tabular columns.
    %%           it contians \RequirePackage{array}.
    \RequirePackage{colortbl,dcolumn}%
    %% ctable package imports the array, tabularx and booktabs packages
    %% all commands from those packages are available as well.
    \RequirePackage{ctable}%
\fi
%%
%% >>> Multimedia
%%
% packages and settings depend on PDF mode
\ifxetex % running xelatex in PDF mode
    \RequirePackage{media9}% multimedia inclusion package with Adobe Reader9/X compatibility.
    \RequirePackage{pgfpages}% inportant for supporting tikz, notes on multiscreen, handout, etc.
    \renewcommand\pgfsetupphysicalpagesizes{% fix two screen notes does not work in Xetex
        \pdfpagewidth\pgfphysicalwidth\pdfpageheight\pgfphysicalheight%
      }
\else
    \ifpdf % running pdfTeX in PDF mode
        \RequirePackage{multimedia}% multimedia inclusion package.
        \RequirePackage{pgfpages}% inportant for supporting tikz, notes on multiscreen, handout, etc.
    \fi
\fi
%%
%% >>> handout output
%%
\ifCOMMONS@handout% enable handout output, require pgfpages package
    \mode<handout>{\setbeamercolor{background canvas}{bg=black!5}}
    \pgfpagesuselayout{2 on 1}[a4paper,border shrink=5mm] % {4 0n 1}{a4paper,border shrink=5mm,landscape}
\fi
%%
%% >>> hyperref packages
%%
%% packages and settings depend on PDF mode
%\ifxetex % running xelatex in PDF mode
%  \RequirePackage[xetex]{hyperref}
%\else
%  \ifpdf % running pdfTeX in PDF mode
%    \RequirePackage[pdftex]{hyperref}
%  \fi
%\fi
%%% Setting Hyperlinks
\hypersetup{% set hyperlinks.
    unicode=true,% allows non-Latin based languages in bookmarks
    %pdftitle={},% title
    %pdfauthor={},% author
    %pdfsubject={},% subject
    %pdfkeywords={keyword1}{key2} {key3},% list of keywords, and uncomment this line if desired
    %pdftoolbar=true,% show Acrobat's toolbar?
    %pdfmenubar=true,% show Acrobat's menu?
    pdffitwindow=false,% window fit to page when opened
    pdfstartview={FitH},% fits the width of the page to the window
    %pdfnewwindow=true,% links in new window
    %colorlinks=true,% false: boxed links; true: colored links
    %linkcolor=blue,% color of internal links
    %citecolor=green,% color of links to bibliography
    %filecolor=magenta,% color of file links
    %urlcolor=cyan% color of external links
    hidelinks% remove link color and border.
}
%% it gives LaTeX the possibility to manage links
%% within the document or to any URL when you compile in PDF.
%% Just load the package in the preamble, at the end of all the
%% other packages but prior to other settings.
%%%%% --------------------------------------------------------------------------------
%%
%%%%**************************** Configuration Command *******************************
%%
%% >>> Extensions and Directories for graphics
%%
%% Declare graphic extensions for automatic selection when including graphics.
%% By avoiding supplying graphic extensions in \includegraphics command,
%% the source file can be more general and adaptive.
\ifxetex % running xelatex in PDF mode
    \DeclareGraphicsExtensions{.pdf,.eps,.ps,.tif,.jpg,.png,.bmp,.gif}%
\else
    \ifpdf % running pdfTeX in PDF mode
        \DeclareGraphicsExtensions{.pdf,.jpg,.jpeg,.png}%
        %% To support .eps, .tif for pdfTex, recommend using epstopdf converter
        %% on the command line only, rather than embedding into source files.
    \fi
\fi
%\graphicspath{{./Img/}}% search path for figures, no need if use scripts to compile
%%%%% --------------------------------------------------------------------------------
\endinput
%% End of file
%%%%% --------------------------------------------------------------------------------
